// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClusterService.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ClusterService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ClusterService {

namespace {

const ::google::protobuf::Descriptor* Empty_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Empty_reflection_ = NULL;
const ::google::protobuf::Descriptor* Param_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Param_reflection_ = NULL;
const ::google::protobuf::Descriptor* Params_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Params_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AlgoType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* ParamValueType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_ClusterService_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ClusterService_2eproto() {
  protobuf_AddDesc_ClusterService_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ClusterService.proto");
  GOOGLE_CHECK(file != NULL);
  Empty_descriptor_ = file->message_type(0);
  static const int Empty_offsets_[1] = {
  };
  Empty_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Empty_descriptor_,
      Empty::default_instance_,
      Empty_offsets_,
      -1,
      -1,
      -1,
      sizeof(Empty),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Empty, _is_default_instance_));
  Param_descriptor_ = file->message_type(1);
  static const int Param_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, valueint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, valuelong_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, valuefloat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, valuedouble_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, valuebool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, valuestring_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, selectedparamvaluetype_),
  };
  Param_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Param_descriptor_,
      Param::default_instance_,
      Param_offsets_,
      -1,
      -1,
      -1,
      sizeof(Param),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Param, _is_default_instance_));
  Params_descriptor_ = file->message_type(2);
  static const int Params_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, algotype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, genericparams_),
  };
  Params_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Params_descriptor_,
      Params::default_instance_,
      Params_offsets_,
      -1,
      -1,
      -1,
      sizeof(Params),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, _is_default_instance_));
  AlgoType_descriptor_ = file->enum_type(0);
  ParamValueType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ClusterService_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Empty_descriptor_, &Empty::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Param_descriptor_, &Param::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Params_descriptor_, &Params::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ClusterService_2eproto() {
  delete Empty::default_instance_;
  delete Empty_reflection_;
  delete Param::default_instance_;
  delete Param_reflection_;
  delete Params::default_instance_;
  delete Params_reflection_;
}

void protobuf_AddDesc_ClusterService_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ClusterService_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ClusterService.proto\022\016ClusterService\"\007"
    "\n\005Empty\"\313\001\n\005Param\022\014\n\004name\030\001 \001(\t\022\020\n\010value"
    "Int\030\002 \001(\005\022\021\n\tvalueLong\030\003 \001(\003\022\022\n\nvalueFlo"
    "at\030\004 \001(\002\022\023\n\013valueDouble\030\005 \001(\001\022\021\n\tvalueBo"
    "ol\030\006 \001(\010\022\023\n\013valueString\030\007 \001(\t\022>\n\026selecte"
    "dParamValueType\030\010 \001(\0162\036.ClusterService.P"
    "aramValueType\"b\n\006Params\022*\n\010algoType\030\001 \001("
    "\0162\030.ClusterService.AlgoType\022,\n\rgenericPa"
    "rams\030\002 \003(\0132\025.ClusterService.Param*\032\n\010Alg"
    "oType\022\016\n\nMeasurment\020\000*[\n\016ParamValueType\022"
    "\010\n\004BOOL\020\000\022\t\n\005SHORT\020\001\022\007\n\003INT\020\002\022\010\n\004LONG\020\003\022"
    "\t\n\005FLOAT\020\004\022\n\n\006DOUBLE\020\005\022\n\n\006STRING\020\0062I\n\010Co"
    "mmands\022=\n\nLoadParams\022\026.ClusterService.Pa"
    "rams\032\025.ClusterService.Empty\"\000b\006proto3", 557);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClusterService.proto", &protobuf_RegisterTypes);
  Empty::default_instance_ = new Empty();
  Param::default_instance_ = new Param();
  Params::default_instance_ = new Params();
  Empty::default_instance_->InitAsDefaultInstance();
  Param::default_instance_->InitAsDefaultInstance();
  Params::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ClusterService_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ClusterService_2eproto {
  StaticDescriptorInitializer_ClusterService_2eproto() {
    protobuf_AddDesc_ClusterService_2eproto();
  }
} static_descriptor_initializer_ClusterService_2eproto_;
const ::google::protobuf::EnumDescriptor* AlgoType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AlgoType_descriptor_;
}
bool AlgoType_IsValid(int value) {
  switch(value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ParamValueType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParamValueType_descriptor_;
}
bool ParamValueType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClusterService.Empty)
}

void Empty::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ClusterService.Empty)
}

void Empty::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:ClusterService.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Empty_descriptor_;
}

const Empty& Empty::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClusterService_2eproto();
  return *default_instance_;
}

Empty* Empty::default_instance_ = NULL;

Empty* Empty::New(::google::protobuf::Arena* arena) const {
  Empty* n = new Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:ClusterService.Empty)
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClusterService.Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:ClusterService.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClusterService.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClusterService.Empty)
  // @@protoc_insertion_point(serialize_end:ClusterService.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClusterService.Empty)
  // @@protoc_insertion_point(serialize_to_array_end:ClusterService.Empty)
  return target;
}

int Empty::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ClusterService.Empty)
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClusterService.Empty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Empty* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClusterService.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClusterService.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClusterService.Empty)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClusterService.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClusterService.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {

  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Empty_descriptor_;
  metadata.reflection = Empty_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Empty

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Param::kNameFieldNumber;
const int Param::kValueIntFieldNumber;
const int Param::kValueLongFieldNumber;
const int Param::kValueFloatFieldNumber;
const int Param::kValueDoubleFieldNumber;
const int Param::kValueBoolFieldNumber;
const int Param::kValueStringFieldNumber;
const int Param::kSelectedParamValueTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Param::Param()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClusterService.Param)
}

void Param::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Param::Param(const Param& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ClusterService.Param)
}

void Param::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valueint_ = 0;
  valuelong_ = GOOGLE_LONGLONG(0);
  valuefloat_ = 0;
  valuedouble_ = 0;
  valuebool_ = false;
  valuestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selectedparamvaluetype_ = 0;
}

Param::~Param() {
  // @@protoc_insertion_point(destructor:ClusterService.Param)
  SharedDtor();
}

void Param::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuestring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Param::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Param::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Param_descriptor_;
}

const Param& Param::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClusterService_2eproto();
  return *default_instance_;
}

Param* Param::default_instance_ = NULL;

Param* Param::New(::google::protobuf::Arena* arena) const {
  Param* n = new Param;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Param::Clear() {
// @@protoc_insertion_point(message_clear_start:ClusterService.Param)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Param, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Param*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(valuelong_, valuedouble_);
  ZR_(valuebool_, selectedparamvaluetype_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  valuestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Param::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClusterService.Param)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClusterService.Param.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_valueInt;
        break;
      }

      // optional int32 valueInt = 2;
      case 2: {
        if (tag == 16) {
         parse_valueInt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valueint_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_valueLong;
        break;
      }

      // optional int64 valueLong = 3;
      case 3: {
        if (tag == 24) {
         parse_valueLong:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &valuelong_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_valueFloat;
        break;
      }

      // optional float valueFloat = 4;
      case 4: {
        if (tag == 37) {
         parse_valueFloat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &valuefloat_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_valueDouble;
        break;
      }

      // optional double valueDouble = 5;
      case 5: {
        if (tag == 41) {
         parse_valueDouble:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valuedouble_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_valueBool;
        break;
      }

      // optional bool valueBool = 6;
      case 6: {
        if (tag == 48) {
         parse_valueBool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &valuebool_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_valueString;
        break;
      }

      // optional string valueString = 7;
      case 7: {
        if (tag == 58) {
         parse_valueString:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valuestring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valuestring().data(), this->valuestring().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClusterService.Param.valueString"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_selectedParamValueType;
        break;
      }

      // optional .ClusterService.ParamValueType selectedParamValueType = 8;
      case 8: {
        if (tag == 64) {
         parse_selectedParamValueType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_selectedparamvaluetype(static_cast< ::ClusterService::ParamValueType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClusterService.Param)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClusterService.Param)
  return false;
#undef DO_
}

void Param::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClusterService.Param)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterService.Param.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 valueInt = 2;
  if (this->valueint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->valueint(), output);
  }

  // optional int64 valueLong = 3;
  if (this->valuelong() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->valuelong(), output);
  }

  // optional float valueFloat = 4;
  if (this->valuefloat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->valuefloat(), output);
  }

  // optional double valueDouble = 5;
  if (this->valuedouble() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->valuedouble(), output);
  }

  // optional bool valueBool = 6;
  if (this->valuebool() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->valuebool(), output);
  }

  // optional string valueString = 7;
  if (this->valuestring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valuestring().data(), this->valuestring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterService.Param.valueString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->valuestring(), output);
  }

  // optional .ClusterService.ParamValueType selectedParamValueType = 8;
  if (this->selectedparamvaluetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->selectedparamvaluetype(), output);
  }

  // @@protoc_insertion_point(serialize_end:ClusterService.Param)
}

::google::protobuf::uint8* Param::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClusterService.Param)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterService.Param.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 valueInt = 2;
  if (this->valueint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->valueint(), target);
  }

  // optional int64 valueLong = 3;
  if (this->valuelong() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->valuelong(), target);
  }

  // optional float valueFloat = 4;
  if (this->valuefloat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->valuefloat(), target);
  }

  // optional double valueDouble = 5;
  if (this->valuedouble() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->valuedouble(), target);
  }

  // optional bool valueBool = 6;
  if (this->valuebool() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->valuebool(), target);
  }

  // optional string valueString = 7;
  if (this->valuestring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valuestring().data(), this->valuestring().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClusterService.Param.valueString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->valuestring(), target);
  }

  // optional .ClusterService.ParamValueType selectedParamValueType = 8;
  if (this->selectedparamvaluetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->selectedparamvaluetype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClusterService.Param)
  return target;
}

int Param::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ClusterService.Param)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 valueInt = 2;
  if (this->valueint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->valueint());
  }

  // optional int64 valueLong = 3;
  if (this->valuelong() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->valuelong());
  }

  // optional float valueFloat = 4;
  if (this->valuefloat() != 0) {
    total_size += 1 + 4;
  }

  // optional double valueDouble = 5;
  if (this->valuedouble() != 0) {
    total_size += 1 + 8;
  }

  // optional bool valueBool = 6;
  if (this->valuebool() != 0) {
    total_size += 1 + 1;
  }

  // optional string valueString = 7;
  if (this->valuestring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->valuestring());
  }

  // optional .ClusterService.ParamValueType selectedParamValueType = 8;
  if (this->selectedparamvaluetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->selectedparamvaluetype());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Param::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClusterService.Param)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Param* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Param>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClusterService.Param)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClusterService.Param)
    MergeFrom(*source);
  }
}

void Param::MergeFrom(const Param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClusterService.Param)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.valueint() != 0) {
    set_valueint(from.valueint());
  }
  if (from.valuelong() != 0) {
    set_valuelong(from.valuelong());
  }
  if (from.valuefloat() != 0) {
    set_valuefloat(from.valuefloat());
  }
  if (from.valuedouble() != 0) {
    set_valuedouble(from.valuedouble());
  }
  if (from.valuebool() != 0) {
    set_valuebool(from.valuebool());
  }
  if (from.valuestring().size() > 0) {

    valuestring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valuestring_);
  }
  if (from.selectedparamvaluetype() != 0) {
    set_selectedparamvaluetype(from.selectedparamvaluetype());
  }
}

void Param::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClusterService.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Param::CopyFrom(const Param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClusterService.Param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Param::IsInitialized() const {

  return true;
}

void Param::Swap(Param* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Param::InternalSwap(Param* other) {
  name_.Swap(&other->name_);
  std::swap(valueint_, other->valueint_);
  std::swap(valuelong_, other->valuelong_);
  std::swap(valuefloat_, other->valuefloat_);
  std::swap(valuedouble_, other->valuedouble_);
  std::swap(valuebool_, other->valuebool_);
  valuestring_.Swap(&other->valuestring_);
  std::swap(selectedparamvaluetype_, other->selectedparamvaluetype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Param::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Param_descriptor_;
  metadata.reflection = Param_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Param

// optional string name = 1;
void Param::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Param::name() const {
  // @@protoc_insertion_point(field_get:ClusterService.Param.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Param::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClusterService.Param.name)
}
 void Param::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClusterService.Param.name)
}
 void Param::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClusterService.Param.name)
}
 ::std::string* Param::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ClusterService.Param.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Param::release_name() {
  // @@protoc_insertion_point(field_release:ClusterService.Param.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Param::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ClusterService.Param.name)
}

// optional int32 valueInt = 2;
void Param::clear_valueint() {
  valueint_ = 0;
}
 ::google::protobuf::int32 Param::valueint() const {
  // @@protoc_insertion_point(field_get:ClusterService.Param.valueInt)
  return valueint_;
}
 void Param::set_valueint(::google::protobuf::int32 value) {
  
  valueint_ = value;
  // @@protoc_insertion_point(field_set:ClusterService.Param.valueInt)
}

// optional int64 valueLong = 3;
void Param::clear_valuelong() {
  valuelong_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Param::valuelong() const {
  // @@protoc_insertion_point(field_get:ClusterService.Param.valueLong)
  return valuelong_;
}
 void Param::set_valuelong(::google::protobuf::int64 value) {
  
  valuelong_ = value;
  // @@protoc_insertion_point(field_set:ClusterService.Param.valueLong)
}

// optional float valueFloat = 4;
void Param::clear_valuefloat() {
  valuefloat_ = 0;
}
 float Param::valuefloat() const {
  // @@protoc_insertion_point(field_get:ClusterService.Param.valueFloat)
  return valuefloat_;
}
 void Param::set_valuefloat(float value) {
  
  valuefloat_ = value;
  // @@protoc_insertion_point(field_set:ClusterService.Param.valueFloat)
}

// optional double valueDouble = 5;
void Param::clear_valuedouble() {
  valuedouble_ = 0;
}
 double Param::valuedouble() const {
  // @@protoc_insertion_point(field_get:ClusterService.Param.valueDouble)
  return valuedouble_;
}
 void Param::set_valuedouble(double value) {
  
  valuedouble_ = value;
  // @@protoc_insertion_point(field_set:ClusterService.Param.valueDouble)
}

// optional bool valueBool = 6;
void Param::clear_valuebool() {
  valuebool_ = false;
}
 bool Param::valuebool() const {
  // @@protoc_insertion_point(field_get:ClusterService.Param.valueBool)
  return valuebool_;
}
 void Param::set_valuebool(bool value) {
  
  valuebool_ = value;
  // @@protoc_insertion_point(field_set:ClusterService.Param.valueBool)
}

// optional string valueString = 7;
void Param::clear_valuestring() {
  valuestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Param::valuestring() const {
  // @@protoc_insertion_point(field_get:ClusterService.Param.valueString)
  return valuestring_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Param::set_valuestring(const ::std::string& value) {
  
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ClusterService.Param.valueString)
}
 void Param::set_valuestring(const char* value) {
  
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ClusterService.Param.valueString)
}
 void Param::set_valuestring(const char* value, size_t size) {
  
  valuestring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ClusterService.Param.valueString)
}
 ::std::string* Param::mutable_valuestring() {
  
  // @@protoc_insertion_point(field_mutable:ClusterService.Param.valueString)
  return valuestring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Param::release_valuestring() {
  // @@protoc_insertion_point(field_release:ClusterService.Param.valueString)
  
  return valuestring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Param::set_allocated_valuestring(::std::string* valuestring) {
  if (valuestring != NULL) {
    
  } else {
    
  }
  valuestring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valuestring);
  // @@protoc_insertion_point(field_set_allocated:ClusterService.Param.valueString)
}

// optional .ClusterService.ParamValueType selectedParamValueType = 8;
void Param::clear_selectedparamvaluetype() {
  selectedparamvaluetype_ = 0;
}
 ::ClusterService::ParamValueType Param::selectedparamvaluetype() const {
  // @@protoc_insertion_point(field_get:ClusterService.Param.selectedParamValueType)
  return static_cast< ::ClusterService::ParamValueType >(selectedparamvaluetype_);
}
 void Param::set_selectedparamvaluetype(::ClusterService::ParamValueType value) {
  
  selectedparamvaluetype_ = value;
  // @@protoc_insertion_point(field_set:ClusterService.Param.selectedParamValueType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Params::kAlgoTypeFieldNumber;
const int Params::kGenericParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Params::Params()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClusterService.Params)
}

void Params::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Params::Params(const Params& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ClusterService.Params)
}

void Params::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  algotype_ = 0;
}

Params::~Params() {
  // @@protoc_insertion_point(destructor:ClusterService.Params)
  SharedDtor();
}

void Params::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Params::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Params::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Params_descriptor_;
}

const Params& Params::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ClusterService_2eproto();
  return *default_instance_;
}

Params* Params::default_instance_ = NULL;

Params* Params::New(::google::protobuf::Arena* arena) const {
  Params* n = new Params;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Params::Clear() {
// @@protoc_insertion_point(message_clear_start:ClusterService.Params)
  algotype_ = 0;
  genericparams_.Clear();
}

bool Params::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClusterService.Params)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ClusterService.AlgoType algoType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_algotype(static_cast< ::ClusterService::AlgoType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_genericParams;
        break;
      }

      // repeated .ClusterService.Param genericParams = 2;
      case 2: {
        if (tag == 18) {
         parse_genericParams:
          DO_(input->IncrementRecursionDepth());
         parse_loop_genericParams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_genericparams()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_genericParams;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClusterService.Params)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClusterService.Params)
  return false;
#undef DO_
}

void Params::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClusterService.Params)
  // optional .ClusterService.AlgoType algoType = 1;
  if (this->algotype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->algotype(), output);
  }

  // repeated .ClusterService.Param genericParams = 2;
  for (unsigned int i = 0, n = this->genericparams_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->genericparams(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ClusterService.Params)
}

::google::protobuf::uint8* Params::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClusterService.Params)
  // optional .ClusterService.AlgoType algoType = 1;
  if (this->algotype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->algotype(), target);
  }

  // repeated .ClusterService.Param genericParams = 2;
  for (unsigned int i = 0, n = this->genericparams_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->genericparams(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ClusterService.Params)
  return target;
}

int Params::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ClusterService.Params)
  int total_size = 0;

  // optional .ClusterService.AlgoType algoType = 1;
  if (this->algotype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->algotype());
  }

  // repeated .ClusterService.Param genericParams = 2;
  total_size += 1 * this->genericparams_size();
  for (int i = 0; i < this->genericparams_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->genericparams(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Params::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClusterService.Params)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Params* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Params>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClusterService.Params)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClusterService.Params)
    MergeFrom(*source);
  }
}

void Params::MergeFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClusterService.Params)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  genericparams_.MergeFrom(from.genericparams_);
  if (from.algotype() != 0) {
    set_algotype(from.algotype());
  }
}

void Params::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClusterService.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Params::CopyFrom(const Params& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClusterService.Params)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Params::IsInitialized() const {

  return true;
}

void Params::Swap(Params* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Params::InternalSwap(Params* other) {
  std::swap(algotype_, other->algotype_);
  genericparams_.UnsafeArenaSwap(&other->genericparams_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Params::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Params_descriptor_;
  metadata.reflection = Params_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Params

// optional .ClusterService.AlgoType algoType = 1;
void Params::clear_algotype() {
  algotype_ = 0;
}
 ::ClusterService::AlgoType Params::algotype() const {
  // @@protoc_insertion_point(field_get:ClusterService.Params.algoType)
  return static_cast< ::ClusterService::AlgoType >(algotype_);
}
 void Params::set_algotype(::ClusterService::AlgoType value) {
  
  algotype_ = value;
  // @@protoc_insertion_point(field_set:ClusterService.Params.algoType)
}

// repeated .ClusterService.Param genericParams = 2;
int Params::genericparams_size() const {
  return genericparams_.size();
}
void Params::clear_genericparams() {
  genericparams_.Clear();
}
const ::ClusterService::Param& Params::genericparams(int index) const {
  // @@protoc_insertion_point(field_get:ClusterService.Params.genericParams)
  return genericparams_.Get(index);
}
::ClusterService::Param* Params::mutable_genericparams(int index) {
  // @@protoc_insertion_point(field_mutable:ClusterService.Params.genericParams)
  return genericparams_.Mutable(index);
}
::ClusterService::Param* Params::add_genericparams() {
  // @@protoc_insertion_point(field_add:ClusterService.Params.genericParams)
  return genericparams_.Add();
}
::google::protobuf::RepeatedPtrField< ::ClusterService::Param >*
Params::mutable_genericparams() {
  // @@protoc_insertion_point(field_mutable_list:ClusterService.Params.genericParams)
  return &genericparams_;
}
const ::google::protobuf::RepeatedPtrField< ::ClusterService::Param >&
Params::genericparams() const {
  // @@protoc_insertion_point(field_list:ClusterService.Params.genericParams)
  return genericparams_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ClusterService

// @@protoc_insertion_point(global_scope)
